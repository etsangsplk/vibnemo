/*
 * generated by Xtext
 */
grammar InternalEditor;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package org.opendaylight.nemo.tool.eclipse.plugin.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.opendaylight.nemo.tool.eclipse.plugin.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import org.opendaylight.nemo.tool.eclipse.plugin.services.EditorGrammarAccess;

}

@parser::members {
 
 	private EditorGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(EditorGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleModel
entryRuleModel 
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getModelAccess().getSentencesAssignment()); }
(rule__Model__SentencesAssignment)*
{ after(grammarAccess.getModelAccess().getSentencesAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSentence
entryRuleSentence 
:
{ before(grammarAccess.getSentenceRule()); }
	 ruleSentence
{ after(grammarAccess.getSentenceRule()); } 
	 EOF 
;

// Rule Sentence
ruleSentence
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSentenceAccess().getAlternatives()); }
(rule__Sentence__Alternatives)
{ after(grammarAccess.getSentenceAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSenEngines
entryRuleSenEngines 
:
{ before(grammarAccess.getSenEnginesRule()); }
	 ruleSenEngines
{ after(grammarAccess.getSenEnginesRule()); } 
	 EOF 
;

// Rule SenEngines
ruleSenEngines
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSenEnginesAccess().getGroup()); }
(rule__SenEngines__Group__0)
{ after(grammarAccess.getSenEnginesAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIpv4
entryRuleIpv4 
:
{ before(grammarAccess.getIpv4Rule()); }
	 ruleIpv4
{ after(grammarAccess.getIpv4Rule()); } 
	 EOF 
;

// Rule Ipv4
ruleIpv4
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIpv4Access().getGroup()); }
(rule__Ipv4__Group__0)
{ after(grammarAccess.getIpv4Access().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUser
entryRuleUser 
:
{ before(grammarAccess.getUserRule()); }
	 ruleUser
{ after(grammarAccess.getUserRule()); } 
	 EOF 
;

// Rule User
ruleUser
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUserAccess().getGroup()); }
(rule__User__Group__0)
{ after(grammarAccess.getUserAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNode
entryRuleNode 
:
{ before(grammarAccess.getNodeRule()); }
	 ruleNode
{ after(grammarAccess.getNodeRule()); } 
	 EOF 
;

// Rule Node
ruleNode
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNodeAccess().getGroup()); }
(rule__Node__Group__0)
{ after(grammarAccess.getNodeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleNodeOperating
entryRuleNodeOperating 
:
{ before(grammarAccess.getNodeOperatingRule()); }
	 ruleNodeOperating
{ after(grammarAccess.getNodeOperatingRule()); } 
	 EOF 
;

// Rule NodeOperating
ruleNodeOperating
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNodeOperatingAccess().getGroup()); }
(rule__NodeOperating__Group__0)
{ after(grammarAccess.getNodeOperatingAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConnection
entryRuleConnection 
:
{ before(grammarAccess.getConnectionRule()); }
	 ruleConnection
{ after(grammarAccess.getConnectionRule()); } 
	 EOF 
;

// Rule Connection
ruleConnection
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConnectionAccess().getGroup()); }
(rule__Connection__Group__0)
{ after(grammarAccess.getConnectionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConnectionUpdate
entryRuleConnectionUpdate 
:
{ before(grammarAccess.getConnectionUpdateRule()); }
	 ruleConnectionUpdate
{ after(grammarAccess.getConnectionUpdateRule()); } 
	 EOF 
;

// Rule ConnectionUpdate
ruleConnectionUpdate
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConnectionUpdateAccess().getGroup()); }
(rule__ConnectionUpdate__Group__0)
{ after(grammarAccess.getConnectionUpdateAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFlow
entryRuleFlow 
:
{ before(grammarAccess.getFlowRule()); }
	 ruleFlow
{ after(grammarAccess.getFlowRule()); } 
	 EOF 
;

// Rule Flow
ruleFlow
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFlowAccess().getGroup()); }
(rule__Flow__Group__0)
{ after(grammarAccess.getFlowAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFlowUpdate
entryRuleFlowUpdate 
:
{ before(grammarAccess.getFlowUpdateRule()); }
	 ruleFlowUpdate
{ after(grammarAccess.getFlowUpdateRule()); } 
	 EOF 
;

// Rule FlowUpdate
ruleFlowUpdate
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFlowUpdateAccess().getGroup()); }
(rule__FlowUpdate__Group__0)
{ after(grammarAccess.getFlowUpdateAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMatches
entryRuleMatches 
:
{ before(grammarAccess.getMatchesRule()); }
	 ruleMatches
{ after(grammarAccess.getMatchesRule()); } 
	 EOF 
;

// Rule Matches
ruleMatches
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMatchesAccess().getGroup()); }
(rule__Matches__Group__0)
{ after(grammarAccess.getMatchesAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMatch
entryRuleMatch 
:
{ before(grammarAccess.getMatchRule()); }
	 ruleMatch
{ after(grammarAccess.getMatchRule()); } 
	 EOF 
;

// Rule Match
ruleMatch
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMatchAccess().getGroup()); }
(rule__Match__Group__0)
{ after(grammarAccess.getMatchAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOperation
entryRuleOperation 
:
{ before(grammarAccess.getOperationRule()); }
	 ruleOperation
{ after(grammarAccess.getOperationRule()); } 
	 EOF 
;

// Rule Operation
ruleOperation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOperationAccess().getGroup()); }
(rule__Operation__Group__0)
{ after(grammarAccess.getOperationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCondition
entryRuleCondition 
:
{ before(grammarAccess.getConditionRule()); }
	 ruleCondition
{ after(grammarAccess.getConditionRule()); } 
	 EOF 
;

// Rule Condition
ruleCondition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConditionAccess().getGroup()); }
(rule__Condition__Group__0)
{ after(grammarAccess.getConditionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleProperty
entryRuleProperty 
:
{ before(grammarAccess.getPropertyRule()); }
	 ruleProperty
{ after(grammarAccess.getPropertyRule()); } 
	 EOF 
;

// Rule Property
ruleProperty
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPropertyAccess().getGroup()); }
(rule__Property__Group__0)
{ after(grammarAccess.getPropertyAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOneProperty
entryRuleOneProperty 
:
{ before(grammarAccess.getOnePropertyRule()); }
	 ruleOneProperty
{ after(grammarAccess.getOnePropertyRule()); } 
	 EOF 
;

// Rule OneProperty
ruleOneProperty
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOnePropertyAccess().getGroup()); }
(rule__OneProperty__Group__0)
{ after(grammarAccess.getOnePropertyAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleModelProperty
entryRuleModelProperty 
:
{ before(grammarAccess.getModelPropertyRule()); }
	 ruleModelProperty
{ after(grammarAccess.getModelPropertyRule()); } 
	 EOF 
;

// Rule ModelProperty
ruleModelProperty
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getModelPropertyAccess().getGroup()); }
(rule__ModelProperty__Group__0)
{ after(grammarAccess.getModelPropertyAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOneModelProperty
entryRuleOneModelProperty 
:
{ before(grammarAccess.getOneModelPropertyRule()); }
	 ruleOneModelProperty
{ after(grammarAccess.getOneModelPropertyRule()); } 
	 EOF 
;

// Rule OneModelProperty
ruleOneModelProperty
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOneModelPropertyAccess().getGroup()); }
(rule__OneModelProperty__Group__0)
{ after(grammarAccess.getOneModelPropertyAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNewObj
entryRuleNewObj 
:
{ before(grammarAccess.getNewObjRule()); }
	 ruleNewObj
{ after(grammarAccess.getNewObjRule()); } 
	 EOF 
;

// Rule NewObj
ruleNewObj
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNewObjAccess().getAlternatives()); }
(rule__NewObj__Alternatives)
{ after(grammarAccess.getNewObjAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__Sentence__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSentenceAccess().getSenEnginesParserRuleCall_0()); }
	ruleSenEngines
{ after(grammarAccess.getSentenceAccess().getSenEnginesParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getSentenceAccess().getUserParserRuleCall_1()); }
	ruleUser
{ after(grammarAccess.getSentenceAccess().getUserParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getSentenceAccess().getNodeParserRuleCall_2()); }
	ruleNode
{ after(grammarAccess.getSentenceAccess().getNodeParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getSentenceAccess().getNodeOperatingParserRuleCall_3()); }
	ruleNodeOperating
{ after(grammarAccess.getSentenceAccess().getNodeOperatingParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getSentenceAccess().getConnectionParserRuleCall_4()); }
	ruleConnection
{ after(grammarAccess.getSentenceAccess().getConnectionParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getSentenceAccess().getConnectionUpdateParserRuleCall_5()); }
	ruleConnectionUpdate
{ after(grammarAccess.getSentenceAccess().getConnectionUpdateParserRuleCall_5()); }
)

    |(
{ before(grammarAccess.getSentenceAccess().getFlowParserRuleCall_6()); }
	ruleFlow
{ after(grammarAccess.getSentenceAccess().getFlowParserRuleCall_6()); }
)

    |(
{ before(grammarAccess.getSentenceAccess().getFlowUpdateParserRuleCall_7()); }
	ruleFlowUpdate
{ after(grammarAccess.getSentenceAccess().getFlowUpdateParserRuleCall_7()); }
)

    |(
{ before(grammarAccess.getSentenceAccess().getOperationParserRuleCall_8()); }
	ruleOperation
{ after(grammarAccess.getSentenceAccess().getOperationParserRuleCall_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NodeOperating__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeOperatingAccess().getUPDATEKeyword_0_0()); }

	'UPDATE' 

{ after(grammarAccess.getNodeOperatingAccess().getUPDATEKeyword_0_0()); }
)

    |(
{ before(grammarAccess.getNodeOperatingAccess().getDELETEKeyword_0_1()); }

	'DELETE' 

{ after(grammarAccess.getNodeOperatingAccess().getDELETEKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectionUpdate__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConnectionUpdateAccess().getUPDATEKeyword_0_0()); }

	'UPDATE' 

{ after(grammarAccess.getConnectionUpdateAccess().getUPDATEKeyword_0_0()); }
)

    |(
{ before(grammarAccess.getConnectionUpdateAccess().getDELETEKeyword_0_1()); }

	'DELETE' 

{ after(grammarAccess.getConnectionUpdateAccess().getDELETEKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FlowUpdate__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlowUpdateAccess().getUPDATEKeyword_0_0()); }

	'UPDATE' 

{ after(grammarAccess.getFlowUpdateAccess().getUPDATEKeyword_0_0()); }
)

    |(
{ before(grammarAccess.getFlowUpdateAccess().getDELETEKeyword_0_1()); }

	'DELETE' 

{ after(grammarAccess.getFlowUpdateAccess().getDELETEKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Alternatives_8
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getNemoIdTerminalRuleCall_8_0()); }
	RULE_NEMOID
{ after(grammarAccess.getOperationAccess().getNemoIdTerminalRuleCall_8_0()); }
)

    |(
{ before(grammarAccess.getOperationAccess().getGroup_8_1()); }
(rule__Operation__Group_8_1__0)
{ after(grammarAccess.getOperationAccess().getGroup_8_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OneProperty__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOnePropertyAccess().getSTRINGTerminalRuleCall_2_0()); }
	RULE_STRING
{ after(grammarAccess.getOnePropertyAccess().getSTRINGTerminalRuleCall_2_0()); }
)

    |(
{ before(grammarAccess.getOnePropertyAccess().getINTTerminalRuleCall_2_1()); }
	RULE_INT
{ after(grammarAccess.getOnePropertyAccess().getINTTerminalRuleCall_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OneModelProperty__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOneModelPropertyAccess().getSTRINGTerminalRuleCall_0_0()); }
	RULE_STRING
{ after(grammarAccess.getOneModelPropertyAccess().getSTRINGTerminalRuleCall_0_0()); }
)

    |(
{ before(grammarAccess.getOneModelPropertyAccess().getINTTerminalRuleCall_0_1()); }
	RULE_INT
{ after(grammarAccess.getOneModelPropertyAccess().getINTTerminalRuleCall_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NewObj__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNewObjAccess().getCREATEKeyword_0()); }

	'CREATE' 

{ after(grammarAccess.getNewObjAccess().getCREATEKeyword_0()); }
)

    |(
{ before(grammarAccess.getNewObjAccess().getIMPORTKeyword_1()); }

	'IMPORT' 

{ after(grammarAccess.getNewObjAccess().getIMPORTKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__SenEngines__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SenEngines__Group__0__Impl
	rule__SenEngines__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SenEngines__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSenEnginesAccess().getEnginesKeyword_0()); }

	'Engines:' 

{ after(grammarAccess.getSenEnginesAccess().getEnginesKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SenEngines__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SenEngines__Group__1__Impl
	rule__SenEngines__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SenEngines__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSenEnginesAccess().getIpv4ParserRuleCall_1()); }
	ruleIpv4
{ after(grammarAccess.getSenEnginesAccess().getIpv4ParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SenEngines__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SenEngines__Group__2__Impl
	rule__SenEngines__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SenEngines__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSenEnginesAccess().getGroup_2()); }
(rule__SenEngines__Group_2__0)*
{ after(grammarAccess.getSenEnginesAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SenEngines__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SenEngines__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SenEngines__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSenEnginesAccess().getSemicolonKeyword_3()); }

	';' 

{ after(grammarAccess.getSenEnginesAccess().getSemicolonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__SenEngines__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SenEngines__Group_2__0__Impl
	rule__SenEngines__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SenEngines__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSenEnginesAccess().getCommaKeyword_2_0()); }

	',' 

{ after(grammarAccess.getSenEnginesAccess().getCommaKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SenEngines__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SenEngines__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SenEngines__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSenEnginesAccess().getIpv4ParserRuleCall_2_1()); }
	ruleIpv4
{ after(grammarAccess.getSenEnginesAccess().getIpv4ParserRuleCall_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Ipv4__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ipv4__Group__0__Impl
	rule__Ipv4__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Ipv4__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIpv4Access().getIPV4_SUBTerminalRuleCall_0()); }
	RULE_IPV4_SUB
{ after(grammarAccess.getIpv4Access().getIPV4_SUBTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ipv4__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ipv4__Group__1__Impl
	rule__Ipv4__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Ipv4__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIpv4Access().getFullStopKeyword_1()); }

	'.' 

{ after(grammarAccess.getIpv4Access().getFullStopKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ipv4__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ipv4__Group__2__Impl
	rule__Ipv4__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Ipv4__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIpv4Access().getIPV4_SUBTerminalRuleCall_2()); }
	RULE_IPV4_SUB
{ after(grammarAccess.getIpv4Access().getIPV4_SUBTerminalRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ipv4__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ipv4__Group__3__Impl
	rule__Ipv4__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Ipv4__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIpv4Access().getFullStopKeyword_3()); }

	'.' 

{ after(grammarAccess.getIpv4Access().getFullStopKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ipv4__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ipv4__Group__4__Impl
	rule__Ipv4__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Ipv4__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIpv4Access().getIPV4_SUBTerminalRuleCall_4()); }
	RULE_IPV4_SUB
{ after(grammarAccess.getIpv4Access().getIPV4_SUBTerminalRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ipv4__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ipv4__Group__5__Impl
	rule__Ipv4__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Ipv4__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIpv4Access().getFullStopKeyword_5()); }

	'.' 

{ after(grammarAccess.getIpv4Access().getFullStopKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ipv4__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ipv4__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Ipv4__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIpv4Access().getIPV4_SUBTerminalRuleCall_6()); }
	RULE_IPV4_SUB
{ after(grammarAccess.getIpv4Access().getIPV4_SUBTerminalRuleCall_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__User__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__User__Group__0__Impl
	rule__User__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__User__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUserAccess().getCREATEKeyword_0()); }

	'CREATE' 

{ after(grammarAccess.getUserAccess().getCREATEKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__User__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__User__Group__1__Impl
	rule__User__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__User__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUserAccess().getSTRINGTerminalRuleCall_1()); }
	RULE_STRING
{ after(grammarAccess.getUserAccess().getSTRINGTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__User__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__User__Group__2__Impl
	rule__User__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__User__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUserAccess().getSTRINGTerminalRuleCall_2()); }
	RULE_STRING
{ after(grammarAccess.getUserAccess().getSTRINGTerminalRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__User__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__User__Group__3__Impl
	rule__User__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__User__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUserAccess().getSTRINGTerminalRuleCall_3()); }
	RULE_STRING
{ after(grammarAccess.getUserAccess().getSTRINGTerminalRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__User__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__User__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__User__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUserAccess().getSemicolonKeyword_4()); }

	';' 

{ after(grammarAccess.getUserAccess().getSemicolonKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Node__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Node__Group__0__Impl
	rule__Node__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeAccess().getNewObjParserRuleCall_0()); }
	ruleNewObj
{ after(grammarAccess.getNodeAccess().getNewObjParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Node__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Node__Group__1__Impl
	rule__Node__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeAccess().getNodeKeyword_1()); }

	'Node' 

{ after(grammarAccess.getNodeAccess().getNodeKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Node__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Node__Group__2__Impl
	rule__Node__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeAccess().getNameAssignment_2()); }
(rule__Node__NameAssignment_2)
{ after(grammarAccess.getNodeAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Node__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Node__Group__3__Impl
	rule__Node__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeAccess().getGroup_3()); }
(rule__Node__Group_3__0)
{ after(grammarAccess.getNodeAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Node__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Node__Group__4__Impl
	rule__Node__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeAccess().getGroup_4()); }
(rule__Node__Group_4__0)?
{ after(grammarAccess.getNodeAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Node__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Node__Group__5__Impl
	rule__Node__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeAccess().getPropertyParserRuleCall_5()); }
(	ruleProperty)?
{ after(grammarAccess.getNodeAccess().getPropertyParserRuleCall_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Node__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Node__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeAccess().getSemicolonKeyword_6()); }

	';' 

{ after(grammarAccess.getNodeAccess().getSemicolonKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__Node__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Node__Group_3__0__Impl
	rule__Node__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeAccess().getTypeKeyword_3_0()); }

	'Type' 

{ after(grammarAccess.getNodeAccess().getTypeKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Node__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Node__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeAccess().getNemoIdTerminalRuleCall_3_1()); }
	RULE_NEMOID
{ after(grammarAccess.getNodeAccess().getNemoIdTerminalRuleCall_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Node__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Node__Group_4__0__Impl
	rule__Node__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeAccess().getContainKeyword_4_0()); }

	'Contain' 

{ after(grammarAccess.getNodeAccess().getContainKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Node__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Node__Group_4__1__Impl
	rule__Node__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeAccess().getNodesAssignment_4_1()); }
(rule__Node__NodesAssignment_4_1)
{ after(grammarAccess.getNodeAccess().getNodesAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Node__Group_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Node__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeAccess().getGroup_4_2()); }
(rule__Node__Group_4_2__0)*
{ after(grammarAccess.getNodeAccess().getGroup_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Node__Group_4_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Node__Group_4_2__0__Impl
	rule__Node__Group_4_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group_4_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeAccess().getCommaKeyword_4_2_0()); }

	',' 

{ after(grammarAccess.getNodeAccess().getCommaKeyword_4_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Node__Group_4_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Node__Group_4_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group_4_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeAccess().getNodesAssignment_4_2_1()); }
(rule__Node__NodesAssignment_4_2_1)
{ after(grammarAccess.getNodeAccess().getNodesAssignment_4_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__NodeOperating__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NodeOperating__Group__0__Impl
	rule__NodeOperating__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeOperating__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeOperatingAccess().getAlternatives_0()); }
(rule__NodeOperating__Alternatives_0)
{ after(grammarAccess.getNodeOperatingAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NodeOperating__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NodeOperating__Group__1__Impl
	rule__NodeOperating__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeOperating__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeOperatingAccess().getNodeKeyword_1()); }

	'Node' 

{ after(grammarAccess.getNodeOperatingAccess().getNodeKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NodeOperating__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NodeOperating__Group__2__Impl
	rule__NodeOperating__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeOperating__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeOperatingAccess().getNodenameAssignment_2()); }
(rule__NodeOperating__NodenameAssignment_2)
{ after(grammarAccess.getNodeOperatingAccess().getNodenameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NodeOperating__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NodeOperating__Group__3__Impl
	rule__NodeOperating__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeOperating__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeOperatingAccess().getGroup_3()); }
(rule__NodeOperating__Group_3__0)?
{ after(grammarAccess.getNodeOperatingAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NodeOperating__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NodeOperating__Group__4__Impl
	rule__NodeOperating__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeOperating__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeOperatingAccess().getGroup_4()); }
(rule__NodeOperating__Group_4__0)?
{ after(grammarAccess.getNodeOperatingAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NodeOperating__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NodeOperating__Group__5__Impl
	rule__NodeOperating__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeOperating__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeOperatingAccess().getPropertyParserRuleCall_5()); }
(	ruleProperty)?
{ after(grammarAccess.getNodeOperatingAccess().getPropertyParserRuleCall_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NodeOperating__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NodeOperating__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeOperating__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeOperatingAccess().getSemicolonKeyword_6()); }

	';' 

{ after(grammarAccess.getNodeOperatingAccess().getSemicolonKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__NodeOperating__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NodeOperating__Group_3__0__Impl
	rule__NodeOperating__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeOperating__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeOperatingAccess().getTypeKeyword_3_0()); }

	'Type' 

{ after(grammarAccess.getNodeOperatingAccess().getTypeKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NodeOperating__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NodeOperating__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeOperating__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeOperatingAccess().getNemoIdTerminalRuleCall_3_1()); }
	RULE_NEMOID
{ after(grammarAccess.getNodeOperatingAccess().getNemoIdTerminalRuleCall_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__NodeOperating__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NodeOperating__Group_4__0__Impl
	rule__NodeOperating__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeOperating__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeOperatingAccess().getContainKeyword_4_0()); }

	'Contain' 

{ after(grammarAccess.getNodeOperatingAccess().getContainKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NodeOperating__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NodeOperating__Group_4__1__Impl
	rule__NodeOperating__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeOperating__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeOperatingAccess().getNodesAssignment_4_1()); }
(rule__NodeOperating__NodesAssignment_4_1)
{ after(grammarAccess.getNodeOperatingAccess().getNodesAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NodeOperating__Group_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NodeOperating__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeOperating__Group_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeOperatingAccess().getGroup_4_2()); }
(rule__NodeOperating__Group_4_2__0)*
{ after(grammarAccess.getNodeOperatingAccess().getGroup_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__NodeOperating__Group_4_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NodeOperating__Group_4_2__0__Impl
	rule__NodeOperating__Group_4_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeOperating__Group_4_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeOperatingAccess().getCommaKeyword_4_2_0()); }

	',' 

{ after(grammarAccess.getNodeOperatingAccess().getCommaKeyword_4_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NodeOperating__Group_4_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NodeOperating__Group_4_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeOperating__Group_4_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeOperatingAccess().getNodesAssignment_4_2_1()); }
(rule__NodeOperating__NodesAssignment_4_2_1)
{ after(grammarAccess.getNodeOperatingAccess().getNodesAssignment_4_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Connection__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Connection__Group__0__Impl
	rule__Connection__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Connection__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConnectionAccess().getCREATEKeyword_0()); }

	'CREATE' 

{ after(grammarAccess.getConnectionAccess().getCREATEKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Connection__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Connection__Group__1__Impl
	rule__Connection__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Connection__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConnectionAccess().getConnectionKeyword_1()); }

	'Connection' 

{ after(grammarAccess.getConnectionAccess().getConnectionKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Connection__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Connection__Group__2__Impl
	rule__Connection__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Connection__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConnectionAccess().getNameAssignment_2()); }
(rule__Connection__NameAssignment_2)
{ after(grammarAccess.getConnectionAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Connection__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Connection__Group__3__Impl
	rule__Connection__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Connection__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConnectionAccess().getTypeKeyword_3()); }

	'Type' 

{ after(grammarAccess.getConnectionAccess().getTypeKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Connection__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Connection__Group__4__Impl
	rule__Connection__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Connection__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConnectionAccess().getNemoIdTerminalRuleCall_4()); }
	RULE_NEMOID
{ after(grammarAccess.getConnectionAccess().getNemoIdTerminalRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Connection__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Connection__Group__5__Impl
	rule__Connection__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Connection__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConnectionAccess().getGroup_5()); }
(rule__Connection__Group_5__0)
{ after(grammarAccess.getConnectionAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Connection__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Connection__Group__6__Impl
	rule__Connection__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Connection__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConnectionAccess().getPropertyParserRuleCall_6()); }
(	ruleProperty)?
{ after(grammarAccess.getConnectionAccess().getPropertyParserRuleCall_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Connection__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Connection__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Connection__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConnectionAccess().getSemicolonKeyword_7()); }

	';' 

{ after(grammarAccess.getConnectionAccess().getSemicolonKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__Connection__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Connection__Group_5__0__Impl
	rule__Connection__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Connection__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConnectionAccess().getEndnodesKeyword_5_0()); }

	'Endnodes' 

{ after(grammarAccess.getConnectionAccess().getEndnodesKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Connection__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Connection__Group_5__1__Impl
	rule__Connection__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Connection__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConnectionAccess().getEndnodeAssignment_5_1()); }
(rule__Connection__EndnodeAssignment_5_1)
{ after(grammarAccess.getConnectionAccess().getEndnodeAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Connection__Group_5__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Connection__Group_5__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Connection__Group_5__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConnectionAccess().getGroup_5_2()); }
(rule__Connection__Group_5_2__0)*
{ after(grammarAccess.getConnectionAccess().getGroup_5_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Connection__Group_5_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Connection__Group_5_2__0__Impl
	rule__Connection__Group_5_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Connection__Group_5_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConnectionAccess().getCommaKeyword_5_2_0()); }

	',' 

{ after(grammarAccess.getConnectionAccess().getCommaKeyword_5_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Connection__Group_5_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Connection__Group_5_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Connection__Group_5_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConnectionAccess().getEndnodeAssignment_5_2_1()); }
(rule__Connection__EndnodeAssignment_5_2_1)
{ after(grammarAccess.getConnectionAccess().getEndnodeAssignment_5_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ConnectionUpdate__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConnectionUpdate__Group__0__Impl
	rule__ConnectionUpdate__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectionUpdate__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConnectionUpdateAccess().getAlternatives_0()); }
(rule__ConnectionUpdate__Alternatives_0)
{ after(grammarAccess.getConnectionUpdateAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConnectionUpdate__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConnectionUpdate__Group__1__Impl
	rule__ConnectionUpdate__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectionUpdate__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConnectionUpdateAccess().getConnectionKeyword_1()); }

	'Connection' 

{ after(grammarAccess.getConnectionUpdateAccess().getConnectionKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConnectionUpdate__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConnectionUpdate__Group__2__Impl
	rule__ConnectionUpdate__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectionUpdate__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConnectionUpdateAccess().getConnectionnameAssignment_2()); }
(rule__ConnectionUpdate__ConnectionnameAssignment_2)
{ after(grammarAccess.getConnectionUpdateAccess().getConnectionnameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConnectionUpdate__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConnectionUpdate__Group__3__Impl
	rule__ConnectionUpdate__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectionUpdate__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConnectionUpdateAccess().getGroup_3()); }
(rule__ConnectionUpdate__Group_3__0)?
{ after(grammarAccess.getConnectionUpdateAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConnectionUpdate__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConnectionUpdate__Group__4__Impl
	rule__ConnectionUpdate__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectionUpdate__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConnectionUpdateAccess().getGroup_4()); }
(rule__ConnectionUpdate__Group_4__0)?
{ after(grammarAccess.getConnectionUpdateAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConnectionUpdate__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConnectionUpdate__Group__5__Impl
	rule__ConnectionUpdate__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectionUpdate__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConnectionUpdateAccess().getPropertyParserRuleCall_5()); }
(	ruleProperty)?
{ after(grammarAccess.getConnectionUpdateAccess().getPropertyParserRuleCall_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConnectionUpdate__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConnectionUpdate__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectionUpdate__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConnectionUpdateAccess().getSemicolonKeyword_6()); }

	';' 

{ after(grammarAccess.getConnectionUpdateAccess().getSemicolonKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__ConnectionUpdate__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConnectionUpdate__Group_3__0__Impl
	rule__ConnectionUpdate__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectionUpdate__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConnectionUpdateAccess().getTypeKeyword_3_0()); }

	'Type' 

{ after(grammarAccess.getConnectionUpdateAccess().getTypeKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConnectionUpdate__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConnectionUpdate__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectionUpdate__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConnectionUpdateAccess().getNemoIdTerminalRuleCall_3_1()); }
	RULE_NEMOID
{ after(grammarAccess.getConnectionUpdateAccess().getNemoIdTerminalRuleCall_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ConnectionUpdate__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConnectionUpdate__Group_4__0__Impl
	rule__ConnectionUpdate__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectionUpdate__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConnectionUpdateAccess().getEndnodesKeyword_4_0()); }

	'Endnodes' 

{ after(grammarAccess.getConnectionUpdateAccess().getEndnodesKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConnectionUpdate__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConnectionUpdate__Group_4__1__Impl
	rule__ConnectionUpdate__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectionUpdate__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConnectionUpdateAccess().getEndnodeAssignment_4_1()); }
(rule__ConnectionUpdate__EndnodeAssignment_4_1)
{ after(grammarAccess.getConnectionUpdateAccess().getEndnodeAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConnectionUpdate__Group_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConnectionUpdate__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectionUpdate__Group_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConnectionUpdateAccess().getGroup_4_2()); }
(rule__ConnectionUpdate__Group_4_2__0)*
{ after(grammarAccess.getConnectionUpdateAccess().getGroup_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ConnectionUpdate__Group_4_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConnectionUpdate__Group_4_2__0__Impl
	rule__ConnectionUpdate__Group_4_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectionUpdate__Group_4_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConnectionUpdateAccess().getCommaKeyword_4_2_0()); }

	',' 

{ after(grammarAccess.getConnectionUpdateAccess().getCommaKeyword_4_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConnectionUpdate__Group_4_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConnectionUpdate__Group_4_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectionUpdate__Group_4_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConnectionUpdateAccess().getEndnodeAssignment_4_2_1()); }
(rule__ConnectionUpdate__EndnodeAssignment_4_2_1)
{ after(grammarAccess.getConnectionUpdateAccess().getEndnodeAssignment_4_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Flow__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Flow__Group__0__Impl
	rule__Flow__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Flow__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlowAccess().getCREATEKeyword_0()); }

	'CREATE' 

{ after(grammarAccess.getFlowAccess().getCREATEKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Flow__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Flow__Group__1__Impl
	rule__Flow__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Flow__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlowAccess().getFlowKeyword_1()); }

	'Flow' 

{ after(grammarAccess.getFlowAccess().getFlowKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Flow__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Flow__Group__2__Impl
	rule__Flow__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Flow__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlowAccess().getNameAssignment_2()); }
(rule__Flow__NameAssignment_2)
{ after(grammarAccess.getFlowAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Flow__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Flow__Group__3__Impl
	rule__Flow__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Flow__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlowAccess().getMatchesParserRuleCall_3()); }
(	ruleMatches)?
{ after(grammarAccess.getFlowAccess().getMatchesParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Flow__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Flow__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Flow__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlowAccess().getSemicolonKeyword_4()); }

	';' 

{ after(grammarAccess.getFlowAccess().getSemicolonKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__FlowUpdate__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FlowUpdate__Group__0__Impl
	rule__FlowUpdate__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FlowUpdate__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlowUpdateAccess().getAlternatives_0()); }
(rule__FlowUpdate__Alternatives_0)
{ after(grammarAccess.getFlowUpdateAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FlowUpdate__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FlowUpdate__Group__1__Impl
	rule__FlowUpdate__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FlowUpdate__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlowUpdateAccess().getFlowKeyword_1()); }

	'Flow' 

{ after(grammarAccess.getFlowUpdateAccess().getFlowKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FlowUpdate__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FlowUpdate__Group__2__Impl
	rule__FlowUpdate__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FlowUpdate__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlowUpdateAccess().getFlowIdAssignment_2()); }
(rule__FlowUpdate__FlowIdAssignment_2)
{ after(grammarAccess.getFlowUpdateAccess().getFlowIdAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FlowUpdate__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FlowUpdate__Group__3__Impl
	rule__FlowUpdate__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__FlowUpdate__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlowUpdateAccess().getMatchesParserRuleCall_3()); }
(	ruleMatches)?
{ after(grammarAccess.getFlowUpdateAccess().getMatchesParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FlowUpdate__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FlowUpdate__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FlowUpdate__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlowUpdateAccess().getSemicolonKeyword_4()); }

	';' 

{ after(grammarAccess.getFlowUpdateAccess().getSemicolonKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Matches__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Matches__Group__0__Impl
	rule__Matches__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Matches__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMatchesAccess().getMatchKeyword_0()); }

	'Match' 

{ after(grammarAccess.getMatchesAccess().getMatchKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Matches__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Matches__Group__1__Impl
	rule__Matches__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Matches__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMatchesAccess().getMatchParserRuleCall_1()); }
	ruleMatch
{ after(grammarAccess.getMatchesAccess().getMatchParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Matches__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Matches__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Matches__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMatchesAccess().getGroup_2()); }
(rule__Matches__Group_2__0)*
{ after(grammarAccess.getMatchesAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Matches__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Matches__Group_2__0__Impl
	rule__Matches__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Matches__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMatchesAccess().getCommaKeyword_2_0()); }

	',' 

{ after(grammarAccess.getMatchesAccess().getCommaKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Matches__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Matches__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Matches__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMatchesAccess().getMatchParserRuleCall_2_1()); }
	ruleMatch
{ after(grammarAccess.getMatchesAccess().getMatchParserRuleCall_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Match__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Match__Group__0__Impl
	rule__Match__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMatchAccess().getNemoIdTerminalRuleCall_0()); }
	RULE_NEMOID
{ after(grammarAccess.getMatchAccess().getNemoIdTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Match__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Match__Group__1__Impl
	rule__Match__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMatchAccess().getColonKeyword_1()); }

	':' 

{ after(grammarAccess.getMatchAccess().getColonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Match__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Match__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMatchAccess().getSTRINGTerminalRuleCall_2()); }
	RULE_STRING
{ after(grammarAccess.getMatchAccess().getSTRINGTerminalRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Operation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Operation__Group__0__Impl
	rule__Operation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getCREATEKeyword_0()); }

	'CREATE' 

{ after(grammarAccess.getOperationAccess().getCREATEKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Operation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Operation__Group__1__Impl
	rule__Operation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getOperationKeyword_1()); }

	'Operation' 

{ after(grammarAccess.getOperationAccess().getOperationKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Operation__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Operation__Group__2__Impl
	rule__Operation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getNameAssignment_2()); }
(rule__Operation__NameAssignment_2)
{ after(grammarAccess.getOperationAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Operation__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Operation__Group__3__Impl
	rule__Operation__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getGroup_3()); }
(rule__Operation__Group_3__0)?
{ after(grammarAccess.getOperationAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Operation__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Operation__Group__4__Impl
	rule__Operation__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getTargetKeyword_4()); }

	'Target' 

{ after(grammarAccess.getOperationAccess().getTargetKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Operation__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Operation__Group__5__Impl
	rule__Operation__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getTargetIdAssignment_5()); }
(rule__Operation__TargetIdAssignment_5)
{ after(grammarAccess.getOperationAccess().getTargetIdAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Operation__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Operation__Group__6__Impl
	rule__Operation__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getConditionParserRuleCall_6()); }
(	ruleCondition)?
{ after(grammarAccess.getOperationAccess().getConditionParserRuleCall_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Operation__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Operation__Group__7__Impl
	rule__Operation__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getActionKeyword_7()); }

	'Action' 

{ after(grammarAccess.getOperationAccess().getActionKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Operation__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Operation__Group__8__Impl
	rule__Operation__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getAlternatives_8()); }
(rule__Operation__Alternatives_8)
{ after(grammarAccess.getOperationAccess().getAlternatives_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Operation__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Operation__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getSemicolonKeyword_9()); }

	';' 

{ after(grammarAccess.getOperationAccess().getSemicolonKeyword_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}






















rule__Operation__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Operation__Group_3__0__Impl
	rule__Operation__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getPriorityKeyword_3_0()); }

	'Priority' 

{ after(grammarAccess.getOperationAccess().getPriorityKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Operation__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Operation__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getValueAssignment_3_1()); }
(rule__Operation__ValueAssignment_3_1)
{ after(grammarAccess.getOperationAccess().getValueAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Operation__Group_8_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Operation__Group_8_1__0__Impl
	rule__Operation__Group_8_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group_8_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getNemoIdTerminalRuleCall_8_1_0()); }
	RULE_NEMOID
{ after(grammarAccess.getOperationAccess().getNemoIdTerminalRuleCall_8_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Operation__Group_8_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Operation__Group_8_1__1__Impl
	rule__Operation__Group_8_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group_8_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getColonKeyword_8_1_1()); }

	':' 

{ after(grammarAccess.getOperationAccess().getColonKeyword_8_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Operation__Group_8_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Operation__Group_8_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group_8_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getTargetNodeAssignment_8_1_2()); }
(rule__Operation__TargetNodeAssignment_8_1_2)
{ after(grammarAccess.getOperationAccess().getTargetNodeAssignment_8_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Condition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Condition__Group__0__Impl
	rule__Condition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionAccess().getConditionKeyword_0()); }

	'Condition' 

{ after(grammarAccess.getConditionAccess().getConditionKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Condition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Condition__Group__1__Impl
	rule__Condition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionAccess().getSTRINGTerminalRuleCall_1()); }
	RULE_STRING
{ after(grammarAccess.getConditionAccess().getSTRINGTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Condition__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Condition__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionAccess().getGroup_2()); }
(rule__Condition__Group_2__0)*
{ after(grammarAccess.getConditionAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Condition__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Condition__Group_2__0__Impl
	rule__Condition__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionAccess().getCommaKeyword_2_0()); }

	',' 

{ after(grammarAccess.getConditionAccess().getCommaKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Condition__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Condition__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionAccess().getSTRINGTerminalRuleCall_2_1()); }
	RULE_STRING
{ after(grammarAccess.getConditionAccess().getSTRINGTerminalRuleCall_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Property__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Property__Group__0__Impl
	rule__Property__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAccess().getPropertyKeyword_0()); }

	'Property ' 

{ after(grammarAccess.getPropertyAccess().getPropertyKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Property__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Property__Group__1__Impl
	rule__Property__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAccess().getOnePropertyParserRuleCall_1()); }
	ruleOneProperty
{ after(grammarAccess.getPropertyAccess().getOnePropertyParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Property__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Property__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAccess().getGroup_2()); }
(rule__Property__Group_2__0)*
{ after(grammarAccess.getPropertyAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Property__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Property__Group_2__0__Impl
	rule__Property__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAccess().getCommaKeyword_2_0()); }

	',' 

{ after(grammarAccess.getPropertyAccess().getCommaKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Property__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Property__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAccess().getOnePropertyParserRuleCall_2_1()); }
	ruleOneProperty
{ after(grammarAccess.getPropertyAccess().getOnePropertyParserRuleCall_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OneProperty__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OneProperty__Group__0__Impl
	rule__OneProperty__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OneProperty__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOnePropertyAccess().getNemoIdTerminalRuleCall_0()); }
	RULE_NEMOID
{ after(grammarAccess.getOnePropertyAccess().getNemoIdTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OneProperty__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OneProperty__Group__1__Impl
	rule__OneProperty__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OneProperty__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOnePropertyAccess().getColonKeyword_1()); }

	':' 

{ after(grammarAccess.getOnePropertyAccess().getColonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OneProperty__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OneProperty__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OneProperty__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOnePropertyAccess().getAlternatives_2()); }
(rule__OneProperty__Alternatives_2)
{ after(grammarAccess.getOnePropertyAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ModelProperty__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModelProperty__Group__0__Impl
	rule__ModelProperty__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelProperty__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelPropertyAccess().getPropertyKeyword_0()); }

	'Property' 

{ after(grammarAccess.getModelPropertyAccess().getPropertyKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ModelProperty__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModelProperty__Group__1__Impl
	rule__ModelProperty__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelProperty__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelPropertyAccess().getOneModelPropertyParserRuleCall_1()); }
	ruleOneModelProperty
{ after(grammarAccess.getModelPropertyAccess().getOneModelPropertyParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ModelProperty__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModelProperty__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelProperty__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelPropertyAccess().getGroup_2()); }
(rule__ModelProperty__Group_2__0)*
{ after(grammarAccess.getModelPropertyAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ModelProperty__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModelProperty__Group_2__0__Impl
	rule__ModelProperty__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelProperty__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelPropertyAccess().getCommaKeyword_2_0()); }

	',' 

{ after(grammarAccess.getModelPropertyAccess().getCommaKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ModelProperty__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModelProperty__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelProperty__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelPropertyAccess().getOneModelPropertyParserRuleCall_2_1()); }
	ruleOneModelProperty
{ after(grammarAccess.getModelPropertyAccess().getOneModelPropertyParserRuleCall_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OneModelProperty__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OneModelProperty__Group__0__Impl
	rule__OneModelProperty__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OneModelProperty__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOneModelPropertyAccess().getAlternatives_0()); }
(rule__OneModelProperty__Alternatives_0)
{ after(grammarAccess.getOneModelPropertyAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OneModelProperty__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OneModelProperty__Group__1__Impl
	rule__OneModelProperty__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OneModelProperty__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOneModelPropertyAccess().getColonKeyword_1()); }

	':' 

{ after(grammarAccess.getOneModelPropertyAccess().getColonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OneModelProperty__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OneModelProperty__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OneModelProperty__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOneModelPropertyAccess().getNemoIdTerminalRuleCall_2()); }
	RULE_NEMOID
{ after(grammarAccess.getOneModelPropertyAccess().getNemoIdTerminalRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}









rule__Model__SentencesAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getSentencesSentenceParserRuleCall_0()); }
	ruleSentence{ after(grammarAccess.getModelAccess().getSentencesSentenceParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Node__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeAccess().getNameNemoIdTerminalRuleCall_2_0()); }
	RULE_NEMOID{ after(grammarAccess.getNodeAccess().getNameNemoIdTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Node__NodesAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeAccess().getNodesNodeCrossReference_4_1_0()); }
(
{ before(grammarAccess.getNodeAccess().getNodesNodeNemoIdTerminalRuleCall_4_1_0_1()); }
	RULE_NEMOID{ after(grammarAccess.getNodeAccess().getNodesNodeNemoIdTerminalRuleCall_4_1_0_1()); }
)
{ after(grammarAccess.getNodeAccess().getNodesNodeCrossReference_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Node__NodesAssignment_4_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeAccess().getNodesNodeCrossReference_4_2_1_0()); }
(
{ before(grammarAccess.getNodeAccess().getNodesNodeNemoIdTerminalRuleCall_4_2_1_0_1()); }
	RULE_NEMOID{ after(grammarAccess.getNodeAccess().getNodesNodeNemoIdTerminalRuleCall_4_2_1_0_1()); }
)
{ after(grammarAccess.getNodeAccess().getNodesNodeCrossReference_4_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NodeOperating__NodenameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeOperatingAccess().getNodenameNodeCrossReference_2_0()); }
(
{ before(grammarAccess.getNodeOperatingAccess().getNodenameNodeNemoIdTerminalRuleCall_2_0_1()); }
	RULE_NEMOID{ after(grammarAccess.getNodeOperatingAccess().getNodenameNodeNemoIdTerminalRuleCall_2_0_1()); }
)
{ after(grammarAccess.getNodeOperatingAccess().getNodenameNodeCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NodeOperating__NodesAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeOperatingAccess().getNodesNodeCrossReference_4_1_0()); }
(
{ before(grammarAccess.getNodeOperatingAccess().getNodesNodeNemoIdTerminalRuleCall_4_1_0_1()); }
	RULE_NEMOID{ after(grammarAccess.getNodeOperatingAccess().getNodesNodeNemoIdTerminalRuleCall_4_1_0_1()); }
)
{ after(grammarAccess.getNodeOperatingAccess().getNodesNodeCrossReference_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NodeOperating__NodesAssignment_4_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeOperatingAccess().getNodesNodeCrossReference_4_2_1_0()); }
(
{ before(grammarAccess.getNodeOperatingAccess().getNodesNodeNemoIdTerminalRuleCall_4_2_1_0_1()); }
	RULE_NEMOID{ after(grammarAccess.getNodeOperatingAccess().getNodesNodeNemoIdTerminalRuleCall_4_2_1_0_1()); }
)
{ after(grammarAccess.getNodeOperatingAccess().getNodesNodeCrossReference_4_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Connection__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConnectionAccess().getNameNemoIdTerminalRuleCall_2_0()); }
	RULE_NEMOID{ after(grammarAccess.getConnectionAccess().getNameNemoIdTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Connection__EndnodeAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConnectionAccess().getEndnodeNodeCrossReference_5_1_0()); }
(
{ before(grammarAccess.getConnectionAccess().getEndnodeNodeNemoIdTerminalRuleCall_5_1_0_1()); }
	RULE_NEMOID{ after(grammarAccess.getConnectionAccess().getEndnodeNodeNemoIdTerminalRuleCall_5_1_0_1()); }
)
{ after(grammarAccess.getConnectionAccess().getEndnodeNodeCrossReference_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Connection__EndnodeAssignment_5_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConnectionAccess().getEndnodeNodeCrossReference_5_2_1_0()); }
(
{ before(grammarAccess.getConnectionAccess().getEndnodeNodeNemoIdTerminalRuleCall_5_2_1_0_1()); }
	RULE_NEMOID{ after(grammarAccess.getConnectionAccess().getEndnodeNodeNemoIdTerminalRuleCall_5_2_1_0_1()); }
)
{ after(grammarAccess.getConnectionAccess().getEndnodeNodeCrossReference_5_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectionUpdate__ConnectionnameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConnectionUpdateAccess().getConnectionnameConnectionCrossReference_2_0()); }
(
{ before(grammarAccess.getConnectionUpdateAccess().getConnectionnameConnectionNemoIdTerminalRuleCall_2_0_1()); }
	RULE_NEMOID{ after(grammarAccess.getConnectionUpdateAccess().getConnectionnameConnectionNemoIdTerminalRuleCall_2_0_1()); }
)
{ after(grammarAccess.getConnectionUpdateAccess().getConnectionnameConnectionCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectionUpdate__EndnodeAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConnectionUpdateAccess().getEndnodeNodeCrossReference_4_1_0()); }
(
{ before(grammarAccess.getConnectionUpdateAccess().getEndnodeNodeNemoIdTerminalRuleCall_4_1_0_1()); }
	RULE_NEMOID{ after(grammarAccess.getConnectionUpdateAccess().getEndnodeNodeNemoIdTerminalRuleCall_4_1_0_1()); }
)
{ after(grammarAccess.getConnectionUpdateAccess().getEndnodeNodeCrossReference_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectionUpdate__EndnodeAssignment_4_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConnectionUpdateAccess().getEndnodeNodeCrossReference_4_2_1_0()); }
(
{ before(grammarAccess.getConnectionUpdateAccess().getEndnodeNodeNemoIdTerminalRuleCall_4_2_1_0_1()); }
	RULE_NEMOID{ after(grammarAccess.getConnectionUpdateAccess().getEndnodeNodeNemoIdTerminalRuleCall_4_2_1_0_1()); }
)
{ after(grammarAccess.getConnectionUpdateAccess().getEndnodeNodeCrossReference_4_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Flow__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlowAccess().getNameNemoIdTerminalRuleCall_2_0()); }
	RULE_NEMOID{ after(grammarAccess.getFlowAccess().getNameNemoIdTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FlowUpdate__FlowIdAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlowUpdateAccess().getFlowIdFlowCrossReference_2_0()); }
(
{ before(grammarAccess.getFlowUpdateAccess().getFlowIdFlowNemoIdTerminalRuleCall_2_0_1()); }
	RULE_NEMOID{ after(grammarAccess.getFlowUpdateAccess().getFlowIdFlowNemoIdTerminalRuleCall_2_0_1()); }
)
{ after(grammarAccess.getFlowUpdateAccess().getFlowIdFlowCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getNameNemoIdTerminalRuleCall_2_0()); }
	RULE_NEMOID{ after(grammarAccess.getOperationAccess().getNameNemoIdTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__ValueAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getValueINTTerminalRuleCall_3_1_0()); }
	RULE_INT{ after(grammarAccess.getOperationAccess().getValueINTTerminalRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__TargetIdAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getTargetIdFlowCrossReference_5_0()); }
(
{ before(grammarAccess.getOperationAccess().getTargetIdFlowNemoIdTerminalRuleCall_5_0_1()); }
	RULE_NEMOID{ after(grammarAccess.getOperationAccess().getTargetIdFlowNemoIdTerminalRuleCall_5_0_1()); }
)
{ after(grammarAccess.getOperationAccess().getTargetIdFlowCrossReference_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__TargetNodeAssignment_8_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getTargetNodeNodeCrossReference_8_1_2_0()); }
(
{ before(grammarAccess.getOperationAccess().getTargetNodeNodeNemoIdTerminalRuleCall_8_1_2_0_1()); }
	RULE_NEMOID{ after(grammarAccess.getOperationAccess().getTargetNodeNodeNemoIdTerminalRuleCall_8_1_2_0_1()); }
)
{ after(grammarAccess.getOperationAccess().getTargetNodeNodeCrossReference_8_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_IPV4_SUB : ('0'..'9'|'1'..'9' '0'..'9'|'1' '0'..'9' '0'..'9'|'2' '0'..'4' '0'..'9'|'25' '0'..'5');

RULE_NEMOID : ('a'..'z'|'A'..'Z'|'$'|'_') ('a'..'z'|'A'..'Z'|'$'|'_'|'-'|'0'..'9')*;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


